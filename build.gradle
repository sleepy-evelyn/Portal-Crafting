plugins {
	id 'fabric-loom' version '1.3.+'
	id "io.github.juuxel.loom-vineflower" version "1.+" // Vineflower
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url "https://maven.shedaniel.me/" } // Cloth Config
	maven { url "https://maven.terraformersmc.com/releases/" } // Mod Menu, EMI
	maven { url "https://maven.quiltmc.org/repository/release/" }  // Quilt Mappings
}

configurations.configureEach {
	resolutionStrategy.eachDependency {
		switch (requested.module.name) { // Remove outdated versions of FAPI and Fabric Loader
			case "fabric-loader": useVersion(loader_version); break
			case "fabric-api": useVersion(fabric_version); break
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "org.quiltmc:quilt-mappings:$minecraft_version+build.$qm_version:intermediary-v2" // Use Quilt Mappings

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modLocalRuntime "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// EMI
	modCompileOnly "dev.emi:emi-fabric:$emi_version:api"
	modLocalRuntime "dev.emi:emi-fabric:$emi_version"
	// Mod Menu
	modCompileOnly "com.terraformersmc:modmenu:$project.modmenu_version"
	modLocalRuntime "com.terraformersmc:modmenu:$project.modmenu_version"
	// Cloth Config
	modApi "me.shedaniel.cloth:cloth-config-fabric:$project.cloth_config_version"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}